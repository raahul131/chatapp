// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "message-service.proto" (package "com.example", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MessageService } from "./message-service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MessageResponse } from "./message-service";
import type { MessageRequest } from "./message-service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service com.example.MessageService
 */
export interface IMessageServiceClient {
    /**
     * @generated from protobuf rpc: message(com.example.MessageRequest) returns (com.example.MessageResponse);
     */
    message(input: MessageRequest, options?: RpcOptions): UnaryCall<MessageRequest, MessageResponse>;
}
/**
 * @generated from protobuf service com.example.MessageService
 */
export class MessageServiceClient implements IMessageServiceClient, ServiceInfo {
    typeName = MessageService.typeName;
    methods = MessageService.methods;
    options = MessageService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: message(com.example.MessageRequest) returns (com.example.MessageResponse);
     */
    message(input: MessageRequest, options?: RpcOptions): UnaryCall<MessageRequest, MessageResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MessageRequest, MessageResponse>("unary", this._transport, method, opt, input);
    }
}
